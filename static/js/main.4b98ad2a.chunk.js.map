{"version":3,"sources":["axios.js","Components/ShowProducts/APIs/constants.js","Components/ShowProducts/APIs/action.js","Components/ShowProducts/Product/index.js","Components/ShowProducts/index.js","Components/common/Input/index.js","Components/common/Button/index.js","Components/UpdateProduct/index.js","Components/AddProduct/index.js","Components/DeleteProduct/index.js","Components/common/Header/index.js","App.js","serviceWorker.js","dataSource/reducer.js","Components/ShowProducts/APIs/reducer.js","dataSource/store.js","index.js"],"names":["instance","axios","create","baseURL","ACTION","fetchProducts","data","dispatch","type","Product","props","className","details","id","name","price","onClick","editProductHandler","deleteProductHandler","ShowProduct","state","productsList","loadhandler","get","then","resp","status","catch","err","console","log","productId","productDetail","find","item","history","push","this","Products","isEmpty","map","product","key","Component","connect","bindActionCreators","Input","label","value","onChange","e","changeHandler","target","Button","clickHandler","EditProduct","productName","undefined","productPrice","saveForm","params","patch","alert","setState","nextProps","prevState","AddProduct","post","DeleteProduct","Fragment","delete","Header","to","path","exact","component","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","ProductsReducer","action","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4b98ad2a.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:4000',\r\n})\r\n\r\nexport default instance","export const ACTION = {\r\n    SHOW_PRODUCTS: 'SHOW_PRODUCTS'\r\n}","import {ACTION} from './constants'\r\n\r\nexport const fetchProducts = (data) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: ACTION.SHOW_PRODUCTS,\r\n            data,\r\n        })\r\n    }\r\n}","import React from 'react'\r\n\r\nconst Product = (props) => {\r\n    return (\r\n        <div className=\"col-md-3 product card\">\r\n            <h4>{props.details.id}</h4>\r\n            <p>{props.details.name}</p>\r\n            <div>${props.details.price}</div>\r\n            <div className=\"form-group\">\r\n                <span className=\"btn btn-small btn-primary\" onClick={() => props.editProductHandler(props.details.id)}>Edit</span>\r\n                <span className=\"btn btn-small btn-danger\" onClick={() => props.deleteProductHandler(props.details.id)}>Delete</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product","import React, { Component } from 'react'\r\nimport axios from '../../axios'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport get from 'lodash/get';\r\nimport isEmpty from 'lodash/isEmpty';\r\n\r\nimport { fetchProducts } from './APIs/action'\r\nimport Product from './Product'\r\n\r\nclass ShowProduct extends Component{\r\n\r\n    state={\r\n        productsList: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadhandler();\r\n    }\r\n\r\n    loadhandler = () => {\r\n        const {fetchProducts} = this.props;\r\n        axios.get('/products')\r\n             .then((resp) => {\r\n                 resp.status === 200 && fetchProducts(get(resp,'data',[]))\r\n             })\r\n             .catch(err => console.log(\"Error Occurred\", err))\r\n    }\r\n\r\n    editProductHandler = (productId) => {\r\n        const {productsList} = this.props;\r\n\r\n        let productDetail = productsList.find((item) => item.id === productId)\r\n\r\n        this.props.history.push('/edit-product', {productDetail})\r\n    }\r\n    \r\n    deleteProductHandler = (productId) => {\r\n\r\n        const {productsList} = this.props;\r\n\r\n        let productDetail = productsList.find((item) => item.id === productId)\r\n\r\n        this.props.history.push('/delete-product', {productDetail})\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        const {productsList} = this.props;\r\n\r\n        let Products = !isEmpty(productsList) && productsList.map((product) => {\r\n            return (\r\n                <Product key={product.id} details={product} editProductHandler={this.editProductHandler} deleteProductHandler={this.deleteProductHandler} />\r\n            )\r\n        })\r\n\r\n        return(\r\n            <div className=\"products-list\">\r\n                <div className=\"container\">\r\n                    {Products}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { productsList: get(state, 'ProductsReducer.productsList') };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        ...bindActionCreators({\r\n            fetchProducts\r\n        }, dispatch),\r\n    }\r\n};\r\n\r\nexport default (connect(mapStateToProps, mapDispatchToProps)(ShowProduct))","import React from 'react'\r\n\r\nconst Input = (props) => {\r\n\r\n    let changeHandler = (e) => {\r\n        props.changeHandler(e.target.name, e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label>{props.label} : </label>\r\n            <input type={props.type} name={props.name} value={props.value} onChange={(e) => changeHandler(e)} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Input","import React from 'react'\r\n\r\nconst Button = (props) => {\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n            <button type={props.type} onClick={props.clickHandler}>\r\n                {props.value}\r\n            </button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Button","import React, { Component } from 'react'\r\nimport axios from '../../axios'\r\n\r\nimport Input from '../common/Input'\r\nimport Button from '../common/Button'\r\nimport get from 'lodash/get'\r\n\r\n\r\nclass EditProduct extends Component {\r\n\r\n    state = {\r\n        productName: undefined,\r\n        productPrice: undefined,\r\n        productId: undefined,\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        return { \r\n            productName: get(prevState,'productName', get(nextProps,'location.state.productDetail.name')),\r\n            productPrice: get(prevState,'productPrice', get(nextProps,'location.state.productDetail.price')),\r\n            productId: get(prevState,'productId', get(nextProps,'location.state.productDetail.id')),\r\n        }\r\n    }\r\n\r\n    saveForm = () => {\r\n        const {productName, productPrice, productId} = this.state;\r\n\r\n        let params = {\r\n            name: productName,\r\n            price: productPrice\r\n        }\r\n\r\n        axios.patch(`/products/${productId}`, params)\r\n             .then((resp) => {\r\n                    if(resp.status === 200) {\r\n                        alert('Update succesfull!')\r\n                        this.props.history.push('/show-product')\r\n                    }\r\n             })\r\n             .catch(err => console.log(\"Error Occurred\", err))\r\n    }\r\n\r\n    changeHandler = (name, value) => {\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    render() {\r\n        let {productName, productPrice} = this.state;\r\n        return(\r\n            <form className=\"form\">\r\n                    <h3>Edit Product</h3>\r\n                    <div className=\"form-block\">\r\n                        <Input type=\"text\" name=\"productName\" value={productName} label=\"Product Name\" changeHandler={this.changeHandler} />\r\n                        \r\n                        <Input type=\"text\" name=\"productPrice\" value={productPrice} label=\"Product Price\" changeHandler={this.changeHandler} />\r\n\r\n                        <Button type=\"button\" clickHandler={this.saveForm} value=\"Save Product\"/>\r\n                    </div>\r\n                </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditProduct","import React, { Component } from 'react'\r\nimport axios from '../../axios'\r\n\r\nimport Input from '../common/Input'\r\nimport Button from '../common/Button'\r\n\r\n\r\nclass AddProduct extends Component {\r\n\r\n    state = {\r\n        productName: null,\r\n        productPrice: null,\r\n        productId: null,\r\n    }\r\n\r\n    saveForm = () => {\r\n        const {productName, productPrice, productId} = this.state;\r\n\r\n        let params = {\r\n            name: productName,\r\n            price: productPrice,\r\n            id: productId\r\n        }\r\n\r\n        axios.post(`/products`, params)\r\n             .then((resp) => {\r\n                    if(resp.status === 201) {\r\n                        alert('Product Added Succesfully!')\r\n                        this.props.history.push('/show-product')\r\n                    }\r\n             })\r\n             .catch(err => console.log(\"Error Occurred\", err))\r\n    }\r\n\r\n    changeHandler = (name, value) => {\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    render() {\r\n        let {productName, productPrice, productId} = this.state;\r\n        return(\r\n            <form className=\"form\">\r\n                    <h3>Add Product</h3>\r\n                    <div className=\"form-block\">\r\n                        <Input type=\"text\" name=\"productName\" value={productName} label=\"Product Name\" changeHandler={this.changeHandler} />\r\n                        <Input type=\"text\" name=\"productPrice\" value={productPrice} label=\"Product Price\" changeHandler={this.changeHandler} />\r\n                        <Input type=\"text\" name=\"productId\" value={productId} label=\"Product Id\" changeHandler={this.changeHandler} />\r\n\r\n                        <Button type=\"button\" clickHandler={this.saveForm} value=\"Add Product\"/>\r\n                    </div>\r\n                </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddProduct","import React from 'react'\r\nimport axios from '../../axios'\r\nimport get from 'lodash/get'\r\n\r\nconst DeleteProduct = (props) => {\r\n    \r\n    const deleteProduct = () => {\r\n        axios.delete(`/products/${get(props,'location.state.productDetail.id')}`)\r\n             .then((resp) => {\r\n                    if(resp.status === 200) {\r\n                        alert('Product deleted succesfully!')\r\n                        props.history.push('/show-product')\r\n                    }\r\n             })\r\n             .catch(err => console.log(\"Error Occurred\", err))\r\n    }\r\n\r\n    const redirectToHomePage = () => {\r\n        props.history.push('/show-product')\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"col-md-12\">\r\n                <p>Product Name : {get(props,'location.state.productDetail.name')}</p>\r\n                <p>Product Price : ${get(props,'location.state.productDetail.price')}</p>\r\n            </div>\r\n            <h2>Are you Sure, you want to delete this product?</h2>\r\n            <div className=\"btn-group\">\r\n                <button className=\"btn btn-success\" onClick={deleteProduct}>Yes</button>\r\n                <button className=\"btn btn-warning\"  onClick={redirectToHomePage}>No</button>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DeleteProduct","import React from 'react'\r\nimport { Link, Switch, Route } from 'react-router-dom'\r\n\r\nimport './style.css'\r\nimport ShowProduct from '../../ShowProducts'\r\nimport EditProduct from '../../UpdateProduct'\r\nimport AddProduct from '../../AddProduct'\r\nimport DeleteProduct from '../../DeleteProduct'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className=\"header\">\r\n            <nav className=\"navbar navbar-default\">\r\n                <ul className=\"list-group\">\r\n                    <Link className=\"list-group-item\" to=\"/show-product\">Show Products</Link>\r\n                    <Link className=\"list-group-item\" to=\"/add-product\">Add Product</Link>\r\n                </ul>\r\n            </nav>\r\n\r\n            <Switch>\r\n                <Route path=\"/show-product\" exact component={ShowProduct}/>\r\n                <Route path=\"/edit-product\" exact component={EditProduct}/>\r\n                <Route path=\"/add-product\" exact component={AddProduct}/>\r\n                <Route path=\"/delete-product\" exact component={DeleteProduct}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\nimport Header from './Components/common/Header';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nimport { combineReducers } from 'redux'\r\n\r\nimport ProductsReducer from '../Components/ShowProducts/APIs/reducer'\r\n\r\n const rootReducer = combineReducers({\r\n    ProductsReducer,\r\n })\r\n\r\n export default rootReducer;","import get from 'lodash/get';\r\n\r\nimport {ACTION} from './constants'\r\n\r\nexport default function ProductsReducer(state = {name: \"kunal\"}, action){\r\n    switch(action.type) {\r\n        case ACTION.SHOW_PRODUCTS:\r\n            return { ...state, productsList: get(action,'data', [])}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducer';\r\n\r\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk),  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/bootstrap.css'\nimport store from './dataSource/store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}